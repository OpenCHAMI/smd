# MIT License
#
# (C) Copyright [2022] Hewlett Packard Enterprise Development LP
#
# Permission is hereby granted, free of charge, to any person obtaining a
# copy of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR
# OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
# ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
# OTHER DEALINGS IN THE SOFTWARE.

# Tavern test cases for the Hardware State Manager (HSM) Hardware[ByFRU] APIs
# Author: Mitch Schooler
# Service: Hardware State Manager

# HMS test metrics test cases: 20
# DELETE /Inventory/Hardware API response code
# DELETE /Inventory/Hardware API response body
# DELETE /Inventory/Hardware No Hardware API response code
# DELETE /Inventory/Hardware No Hardware API response body
# GET /Inventory/Hardware No Hardware API response code
# GET /Inventory/Hardware No Hardware API response body
# GET /Inventory/HardwareByFRU API response code
# GET /Inventory/HardwareByFRU API response body
# GET /Inventory/HardwareByFRU/{fruid} API response code
# GET /Inventory/HardwareByFRU/{fruid} API response body
# DELETE /Inventory/HardwareByFRU/{fruid} API response code
# DELETE /Inventory/HardwareByFRU/{fruid} API response body
# DELETE /Inventory/HardwareByFRU/{fruid} Non Existent FRUID API response code
# DELETE /Inventory/HardwareByFRU/{fruid} Non Existent FRUID API response body
# GET /Inventory/HardwareByFRU/{fruid} Non Existent FRUID API response code
# GET /Inventory/HardwareByFRU/{fruid} Non Existent FRUID API response body
# DELETE /Inventory/HardwareByFRU API response code
# DELETE /Inventory/HardwareByFRU API response body
# DELETE /Inventory/HardwareByFRU No Data API response code
# DELETE /Inventory/HardwareByFRU No Data API response body
---
test_name: hsmAPIinventoryHardware[ByFRU]destructive

stages:
  - name: Get access token
    request:
      url: "{opaal_base_url}/token"
      method: GET
      verify: !bool "{verify}"
    response:
      status_code: 200
      save:
        json:
          access_token: access_token

  # DELETE /Inventory/Hardware API response code
  # DELETE /Inventory/Hardware API response body
  - name: hsmAPIinventoryHardwareDELETE - Remove all Hardware using DELETE.
    request:
      url: "{hsm_base_url}/hsm/v2/Inventory/Hardware"
      method: DELETE
      verify: !bool "{verify}"
      headers:
        Authorization: "Bearer {access_token}"
    response:
      status_code:
        - 200
        - 404

  # DELETE /Inventory/Hardware No Hardware API response code
  # DELETE /Inventory/Hardware No Hardware API response body
  - name: hsmAPIinventoryHardwareDELETEnoHardware - Attempt to remove all Hardware using DELETE when none are present.
    request:
      url: "{hsm_base_url}/hsm/v2/Inventory/Hardware"
      method: DELETE
      verify: !bool "{verify}"
      headers:
        Authorization: "Bearer {access_token}"
    response:
      status_code: 404
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              type:
                type: str
                required: True
                enum:
                  - "about:blank"
              title:
                type: str
                required: True
                enum:
                  - "Not Found"
              detail:
                type: str
                required: True
                enum:
                  - "no entries to delete"
              status:
                type: int
                required: True
                enum:
                  - 404

  # GET /Inventory/Hardware No Hardware API response code
  # GET /Inventory/Hardware No Hardware API response body
  - name: hsmAPIinventoryHardwareGETnoHardware - Retrieve an empty set of Hardware using GET.
    request:
      url: "{hsm_base_url}/hsm/v2/Inventory/Hardware"
      method: GET
      verify: !bool "{verify}"
      headers:
        Authorization: "Bearer {access_token}"
    response:
      status_code: 200
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: seq
            required: True
            matching: all
            sequence:
              - type: map
                required: False
                mapping:
                  ID:
                    type: str
                    required: True

  # GET /Inventory/HardwareByFRU API response code
  # GET /Inventory/HardwareByFRU API response body
  - name: hsmAPIinventoryHardwareByFRUget - Retrieve all Hardware Inventory entries by FRU using GET.
    request:
      url: "{hsm_base_url}/hsm/v2/Inventory/HardwareByFRU"
      method: GET
      verify: !bool "{verify}"
      headers:
        Authorization: "Bearer {access_token}"
    response:
      status_code: 200
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: seq
            required: True
            matching: all
            sequence:
              - type: map
                required: True
                # Allows the various types of FRUInfo maps
                allowempty: True
                mapping:
                  FRUID:
                    type: str
                    required: True
                  Type:
                    type: str
                    required: True
                  Subtype:
                    type: str
                    required: True
                  HWInventoryByFRUType:
                    type: str
                    required: True
      save:
        json:
          fruid: "[0].FRUID"

  # GET /Inventory/HardwareByFRU/{fruid} API response code
  # GET /Inventory/HardwareByFRU/{fruid} API response body
  - name: hsmAPIinventoryHardwareByFRUfruidGET - Retrieve a Hardware Inventory entry by FRUID using GET.
    request:
      url: "{hsm_base_url}/hsm/v2/Inventory/HardwareByFRU/{fruid}"
      method: GET
      verify: !bool "{verify}"
      headers:
        Authorization: "Bearer {access_token}"
    response:
      status_code: 200
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            # Allows the various types of FRUInfo maps
            allowempty: True
            mapping:
              FRUID:
                type: str
                required: True
              Type:
                type: str
                required: True
              Subtype:
                type: str
                required: True
              HWInventoryByFRUType:
                type: str
                required: True

  # DELETE /Inventory/HardwareByFRU/{fruid} API response code
  # DELETE /Inventory/HardwareByFRU/{fruid} API response body
  - name: hsmAPIinventoryHardwareByFRUfruidDELETE - Remove a Hardware Inventory entry by FRUID using DELETE.
    request:
      url: "{hsm_base_url}/hsm/v2/Inventory/HardwareByFRU/{fruid}"
      method: DELETE
      verify: !bool "{verify}"
      headers:
        Authorization: "Bearer {access_token}"
    response:
      status_code: 200
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              code:
                type: int
                required: True
                enum:
                  - 0
              message:
                type: str
                required: True
                enum:
                  - "deleted 1 entry"

  # DELETE /Inventory/HardwareByFRU/{fruid} Non Existent FRUID API response code
  # DELETE /Inventory/HardwareByFRU/{fruid} Non Existent FRUID API response body
  - name: hsmAPIinventoryHardwareByFRUfruidDELETEnonExistentFRUID - Attempt to remove a Hardware Inventory entry by FRUID that doesn't exist using DELETE.
    request:
      url: "{hsm_base_url}/hsm/v2/Inventory/HardwareByFRU/{fruid}"
      method: DELETE
      verify: !bool "{verify}"
      headers:
        Authorization: "Bearer {access_token}"
    response:
      status_code: 404
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              type:
                type: str
                required: True
                enum:
                  - "about:blank"
              title:
                type: str
                required: True
                enum:
                  - "Not Found"
              detail:
                type: str
                required: True
                enum:
                  - "no such FRU ID."
              status:
                type: int
                required: True
                enum:
                  - 404

  # GET /Inventory/HardwareByFRU/{fruid} Non Existent FRUID API response code
  # GET /Inventory/HardwareByFRU/{fruid} Non Existent FRUID API response body
  - name: hsmAPIinventoryHardwareByFRUfruidGETnonExistentFRUID - Attempt to retrieve a Hardware Inventory entry by FRUID that doesn't exist using GET.
    request:
      url: "{hsm_base_url}/hsm/v2/Inventory/HardwareByFRU/{fruid}"
      method: GET
      verify: !bool "{verify}"
      headers:
        Authorization: "Bearer {access_token}"
    response:
      status_code: 404
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              type:
                type: str
                required: True
                enum:
                  - "about:blank"
              title:
                type: str
                required: True
                enum:
                  - "Not Found"
              detail:
                type: str
                required: True
                enum:
                  - "no such FRU ID."
              status:
                type: int
                required: True
                enum:
                  - 404

  # DELETE /Inventory/HardwareByFRU API response code
  # DELETE /Inventory/HardwareByFRU API response body
  - name: hsmAPIinventoryHardwareByFRUdelete - Remove all Hardware Inventory entries by FRUID using DELETE.
    request:
      url: "{hsm_base_url}/hsm/v2/Inventory/HardwareByFRU"
      method: DELETE
      verify: !bool "{verify}"
      headers:
        Authorization: "Bearer {access_token}"
    response:
      status_code: 200
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              code:
                type: int
                required: True
                enum:
                  - 0
              message:
                type: str
                required: True
                pattern: "deleted [0-9]+ entries"

  # DELETE /Inventory/HardwareByFRU No Data API response code
  # DELETE /Inventory/HardwareByFRU No Data API response body
  - name: hsmAPIinventoryHardwareByFRUdeleteNoData - Attempt to remove all Hardware Inventory entries by FRUID with no data present using DELETE.
    request:
      url: "{hsm_base_url}/hsm/v2/Inventory/HardwareByFRU"
      method: DELETE
      verify: !bool "{verify}"
      headers:
        Authorization: "Bearer {access_token}"
    response:
      status_code: 404
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              type:
                type: str
                required: True
                enum:
                  - "about:blank"
              title:
                type: str
                required: True
                enum:
                  - "Not Found"
              detail:
                type: str
                required: True
                enum:
                  - "no entries to delete"
              status:
                type: int
                required: True
                enum:
                  - 404
