# MIT License
#
# (C) Copyright [2022] Hewlett Packard Enterprise Development LP
#
# Permission is hereby granted, free of charge, to any person obtaining a
# copy of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR
# OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
# ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
# OTHER DEALINGS IN THE SOFTWARE.

# Tavern test cases for the Hardware State Manager (HSM) RedfishEndpoints API
# Author: Manny Alvarez
# Service: Hardware State Manager

# HMS test metrics test cases: 17
# GET /Inventory/RedfishEndpoints Invalid xname
# GET /Inventory/RedfishEndpoints Invalid type
# POST /Inventory/RedfishEndpoints Invalid xname
# POST /Inventory/RedfishEndpoints Hostname FQDN mismatch
# POST /Inventory/RedfishEndpoints Invalid xname (Many)
# POST /Inventory/RedfishEndpoints Hostname FQDN mismatch (Many)
# GET /Inventory/RedfishEndpoints/{xname} Invalid xname
# GET /Inventory/RedfishEndpoints/{xname} non-existent
# PUT /Inventory/RedfishEndpoints/{xname} Invalid xname
# PUT /Inventory/RedfishEndpoints/{xname} xname mismatch
# PUT /Inventory/RedfishEndpoints/{xname} Hostname FQDN mismatch
# PUT /Inventory/RedfishEndpoints/{xname} non-existent
# PATCH /Inventory/RedfishEndpoints/{xname} Invalid xname
# PATCH /Inventory/RedfishEndpoints/{xname} Hostname FQDN mismatch
# PATCH /Inventory/RedfishEndpoints/{xname} non-existent
# DELETE /Inventory/RedfishEndpoints/{xname} Invalid xname
# DELETE /Inventory/RedfishEndpoints/{xname} non-existent
---
test_name: hsmAPIRedfishEndpointsNegative

stages:

  # GET /Inventory/RedfishEndpoints Invalid xname
  - name: hsmAPIRedfishEndpointsGET - Invalid xname
    request:
      url: "{hsm_base_url}/hsm/v2/Inventory/RedfishEndpoints?id=foo"
      method: GET
      verify: !bool "{verify}"
    response:
      status_code: 400
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              type:
                type: str
                required: True
                enum:
                  - "about:blank"
              title:
                type: str
                required: True
                enum:
                  - "Bad Request"
              detail:
                type: str
                required: True
                enum:
                  - "bad query param: Argument was not a valid xname ID"
              status:
                type: int
                required: True
                enum:
                  - 400

  # GET /Inventory/RedfishEndpoints Invalid type
  - name: hsmAPIRedfishEndpointsGET - Invalid type
    request:
      url: "{hsm_base_url}/hsm/v2/Inventory/RedfishEndpoints?type=foo"
      method: GET
      verify: !bool "{verify}"
    response:
      status_code: 400
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              type:
                type: str
                required: True
                enum:
                  - "about:blank"
              title:
                type: str
                required: True
                enum:
                  - "Bad Request"
              detail:
                type: str
                required: True
                enum:
                  - "bad query param: Argument was not a valid HMS Type"
              status:
                type: int
                required: True
                enum:
                  - 400

  # POST /Inventory/RedfishEndpoints Invalid xname
  - name: hsmAPIRedfishEndpointsPOST - Invalid xname
    request:
      url: "{hsm_base_url}/hsm/v2/Inventory/RedfishEndpoints"
      method: POST
      verify: !bool "{verify}"
      json: {"ID":"foo"}
    response:
      status_code: 400
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              type:
                type: str
                required: True
                enum:
                  - "about:blank"
              title:
                type: str
                required: True
                enum:
                  - "Bad Request"
              detail:
                type: str
                required: True
                enum:
                  - "couldn't validate endpoint data: foo is not a valid locational xname ID"
              status:
                type: int
                required: True
                enum:
                  - 400

  # POST /Inventory/RedfishEndpoints Hostname FQDN mismatch
  - name: hsmAPIRedfishEndpointsPOST - Hostname FQDN mismatch
    request:
      url: "{hsm_base_url}/hsm/v2/Inventory/RedfishEndpoints"
      method: POST
      verify: !bool "{verify}"
      json: {"ID":"x9999c7s99b91","FQDN":"MyFQDN","Hostname":"MyHostname"}
    response:
      status_code: 400
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              type:
                type: str
                required: True
                enum:
                  - "about:blank"
              title:
                type: str
                required: True
                enum:
                  - "Bad Request"
              detail:
                type: str
                required: True
                enum:
                  - "couldn't validate endpoint data: host/domain conflicts with FQDN: 'MyHostname' != 'MyFQDN'"
              status:
                type: int
                required: True
                enum:
                  - 400

  # POST /Inventory/RedfishEndpoints Invalid xname (Many)
  - name: hsmAPIRedfishEndpointsPOST - Invalid xname (Many)
    request:
      url: "{hsm_base_url}/hsm/v2/Inventory/RedfishEndpoints"
      method: POST
      verify: !bool "{verify}"
      json: {"RedfishEndpoints":[{"ID":"foo"}]}
    response:
      status_code: 400
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              type:
                type: str
                required: True
                enum:
                  - "about:blank"
              title:
                type: str
                required: True
                enum:
                  - "Bad Request"
              detail:
                type: str
                required: True
                enum:
                  - "couldn't validate endpoint data at idx 0: foo is not a valid locational xname ID"
              status:
                type: int
                required: True
                enum:
                  - 400

  # POST /Inventory/RedfishEndpoints Hostname FQDN mismatch (Many)
  - name: hsmAPIRedfishEndpointsPOST - Hostname FQDN mismatch (Many)
    request:
      url: "{hsm_base_url}/hsm/v2/Inventory/RedfishEndpoints"
      method: POST
      verify: !bool "{verify}"
      json: {"RedfishEndpoints":[{"ID":"x9999c7s99b91","FQDN":"MyFQDN","Hostname":"MyHostname"}]}
    response:
      status_code: 400
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              type:
                type: str
                required: True
                enum:
                  - "about:blank"
              title:
                type: str
                required: True
                enum:
                  - "Bad Request"
              detail:
                type: str
                required: True
                enum:
                  - "couldn't validate endpoint data at idx 0: host/domain conflicts with FQDN: 'MyHostname' != 'MyFQDN'"
              status:
                type: int
                required: True
                enum:
                  - 400

  # GET /Inventory/RedfishEndpoints/{xname} Invalid xname
  - name: hsmAPIRedfishEndpointGET - Invalid xname
    request:
      url: "{hsm_base_url}/hsm/v2/Inventory/RedfishEndpoints/foo"
      method: GET
      verify: !bool "{verify}"
    response:
      status_code: 404
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              type:
                type: str
                required: True
                enum:
                  - "about:blank"
              title:
                type: str
                required: True
                enum:
                  - "Not Found"
              detail:
                type: str
                required: True
                enum:
                  - "no such xname."
              status:
                type: int
                required: True
                enum:
                  - 404

  # GET /Inventory/RedfishEndpoints/{xname} non-existent
  - name: hsmAPIRedfishEndpointGET - non-existent
    request:
      url: "{hsm_base_url}/hsm/v2/Inventory/RedfishEndpoints/x9999c7s99b91"
      method: GET
      verify: !bool "{verify}"
    response:
      status_code: 404
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              type:
                type: str
                required: True
                enum:
                  - "about:blank"
              title:
                type: str
                required: True
                enum:
                  - "Not Found"
              detail:
                type: str
                required: True
                enum:
                  - "no such xname."
              status:
                type: int
                required: True
                enum:
                  - 404

  # PUT /Inventory/RedfishEndpoints/{xname} Invalid xname
  - name: hsmAPIRedfishEndpointPUT - Invalid xname
    request:
      url: "{hsm_base_url}/hsm/v2/Inventory/RedfishEndpoints/foo"
      method: PUT
      verify: !bool "{verify}"
      json: {"ID":"foo"}
    response:
      status_code: 400
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              type:
                type: str
                required: True
                enum:
                  - "about:blank"
              title:
                type: str
                required: True
                enum:
                  - "Bad Request"
              detail:
                type: str
                required: True
                enum:
                  - "couldn't validate endpoint data: foo is not a valid locational xname ID"
              status:
                type: int
                required: True
                enum:
                  - 400

  # PUT /Inventory/RedfishEndpoints/{xname} xname mismatch
  - name: hsmAPIRedfishEndpointPUT - xname mismatch
    request:
      url: "{hsm_base_url}/hsm/v2/Inventory/RedfishEndpoints/x9999c7s99b91"
      method: PUT
      verify: !bool "{verify}"
      json: {"ID":"foo"}
    response:
      status_code: 400
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              type:
                type: str
                required: True
                enum:
                  - "about:blank"
              title:
                type: str
                required: True
                enum:
                  - "Bad Request"
              detail:
                type: str
                required: True
                enum:
                  - "xname in URL and PUT body do not match"
              status:
                type: int
                required: True
                enum:
                  - 400

  # PUT /Inventory/RedfishEndpoints/{xname} Hostname FQDN mismatch
  - name: hsmAPIRedfishEndpointPUT - Hostname FQDN mismatch
    request:
      url: "{hsm_base_url}/hsm/v2/Inventory/RedfishEndpoints/x9999c7s99b91"
      method: PUT
      verify: !bool "{verify}"
      json: {"ID":"x9999c7s99b91","FQDN":"MyFQDN","Hostname":"MyHostname"}
    response:
      status_code: 400
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              type:
                type: str
                required: True
                enum:
                  - "about:blank"
              title:
                type: str
                required: True
                enum:
                  - "Bad Request"
              detail:
                type: str
                required: True
                enum:
                  - "couldn't validate endpoint data: host/domain conflicts with FQDN: 'MyHostname' != 'MyFQDN'"
              status:
                type: int
                required: True
                enum:
                  - 400

  # todo ochami added the ability to put a non-existent RFEndpoint
  # PUT /Inventory/RedfishEndpoints/{xname} non-existent
  # - name: hsmAPIRedfishEndpointPUT - non-existent
  #   request:
  #     url: "{hsm_base_url}/hsm/v2/Inventory/RedfishEndpoints/x9999c7s99b91"
  #     method: PUT
  #     verify: !bool "{verify}"
  #     json: {"ID":"x9999c7s99b91"}
  #   response:
  #     status_code: 404
  #     verify_response_with:
  #       function: tavern.testutils.helpers:validate_pykwalify
  #       extra_kwargs:
  #         schema:
  #           type: map
  #           required: True
  #           mapping:
  #             type:
  #               type: str
  #               required: True
  #               enum:
  #                 - "about:blank"
  #             title:
  #               type: str
  #               required: True
  #               enum:
  #                 - "Not Found"
  #             detail:
  #               type: str
  #               required: True
  #               enum:
  #                 - "No such entry: x9999c7s99b91"
  #             status:
  #               type: int
  #               required: True
  #               enum:
  #                 - 404

  # PATCH /Inventory/RedfishEndpoints/{xname} Invalid xname
  - name: hsmAPIRedfishEndpointPATCH - Invalid xname
    request:
      url: "{hsm_base_url}/hsm/v2/Inventory/RedfishEndpoints/foo"
      method: PATCH
      verify: !bool "{verify}"
      json: {"ID":"foo"}
    response:
      status_code: 400
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              type:
                type: str
                required: True
                enum:
                  - "about:blank"
              title:
                type: str
                required: True
                enum:
                  - "Bad Request"
              detail:
                type: str
                required: True
                enum:
                  - "xname in URL is not valid"
              status:
                type: int
                required: True
                enum:
                  - 400

  # PATCH /Inventory/RedfishEndpoints/{xname} non-existent
  - name: hsmAPIRedfishEndpointPATCH - non-existent
    request:
      url: "{hsm_base_url}/hsm/v2/Inventory/RedfishEndpoints/x9999c7s99b91"
      method: PATCH
      verify: !bool "{verify}"
      json: {"ID":"x9999c7s99b91"}
    response:
      status_code: 404
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              type:
                type: str
                required: True
                enum:
                  - "about:blank"
              title:
                type: str
                required: True
                enum:
                  - "Not Found"
              detail:
                type: str
                required: True
                enum:
                  - "No such entry: x9999c7s99b91"
              status:
                type: int
                required: True
                enum:
                  - 404

  # DELETE /Inventory/RedfishEndpoints/{xname} Invalid xname
  - name: hsmAPIRedfishEndpointDELETE - Invalid xname
    request:
      url: "{hsm_base_url}/hsm/v2/Inventory/RedfishEndpoints/foo"
      method: DELETE
      verify: !bool "{verify}"
    response:
      status_code: 400
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              type:
                type: str
                required: True
                enum:
                  - "about:blank"
              title:
                type: str
                required: True
                enum:
                  - "Bad Request"
              detail:
                type: str
                required: True
                enum:
                  - "Argument was not a valid xname ID"
              status:
                type: int
                required: True
                enum:
                  - 400

  # DELETE /Inventory/RedfishEndpoints/{xname} non-existent
  - name: hsmAPIRedfishEndpointDELETE - non-existent
    request:
      url: "{hsm_base_url}/hsm/v2/Inventory/RedfishEndpoints/x9999c7s99b91"
      method: DELETE
      verify: !bool "{verify}"
    response:
      status_code: 404
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              type:
                type: str
                required: True
                enum:
                  - "about:blank"
              title:
                type: str
                required: True
                enum:
                  - "Not Found"
              detail:
                type: str
                required: True
                enum:
                  - "no such xname."
              status:
                type: int
                required: True
                enum:
                  - 404
