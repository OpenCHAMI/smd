# MIT License
#
# (C) Copyright [2019-2021] Hewlett Packard Enterprise Development LP
#
# Permission is hereby granted, free of charge, to any person obtaining a
# copy of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR
# OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
# ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
# OTHER DEALINGS IN THE SOFTWARE.

# Tavern test cases for the Hardware State Manager (HSM) ServiceEndpoints API.
# Author: Mitch Schooler
# Service: Hardware State Manager

# HMS test metrics test cases: 26
# GET /ServiceEndpoints API response code
# GET /ServiceEndpoints API response body
# GET /ServiceEndpoints/AccountService API response code
# GET /ServiceEndpoints/AccountService API response body
# GET /ServiceEndpoints?service=AccountService API response code
# GET /ServiceEndpoints/AccountService/RedfishEndpoints/{xname} nodeBMC API response code
# GET /ServiceEndpoints/EventService API response code
# GET /ServiceEndpoints/EventService API response body
# GET /ServiceEndpoints?service=EventService API response code
# GET /ServiceEndpoints/EventService/RedfishEndpoints/{xname} nodeBMC API response code
# GET /ServiceEndpoints/SessionService API response code
# GET /ServiceEndpoints/SessionService API response body
# GET /ServiceEndpoints?service=SessionService API response code
# GET /ServiceEndpoints/SessionService/RedfishEndpoints/{xname} nodeBMC API response code
# GET /ServiceEndpoints/UpdateService API response code
# GET /ServiceEndpoints/UpdateService API response body
# GET /ServiceEndpoints?service=UpdateService API response code
# GET /ServiceEndpoints/UpdateService/RedfishEndpoints/{xname} nodeBMC API response code
# GET /ServiceEndpoints/AccountService/RedfishEndpoints/{xname} valid nonexistent nodeBMC API response code
# GET /ServiceEndpoints/EventService/RedfishEndpoints/{xname} valid nonexistent nodeBMC API response code
# GET /ServiceEndpoints/SessionService/RedfishEndpoints/{xname} valid nonexistent nodeBMC API response code
# GET /ServiceEndpoints/UpdateService/RedfishEndpoints/{xname} valid nonexistent nodeBMC API response code
# GET /ServiceEndpoints/AccountService/RedfishEndpoints/{xname} invalid nodeBMC API response code
# GET /ServiceEndpoints/EventService/RedfishEndpoints/{xname} invalid nodeBMC API response code
# GET /ServiceEndpoints/SessionService/RedfishEndpoints/{xname} invalid nodeBMC API response code
# GET /ServiceEndpoints/UpdateService/RedfishEndpoints/{xname} invalid nodeBMC API response code
---
test_name: Query the ServiceEndpoints collection

stages:
  - name: Get access token
    request:
      url: "{opaal_base_url}/token"
      method: GET
      verify: !bool "{verify}"
    response:
      status_code: 200
      save:
        json:
          access_token: access_token
  # GET /ServiceEndpoints API response code
  # GET /ServiceEndpoints API response body
  - name: Ensure that we can conduct a query on the ServiceEndpoints collection
    request:
      url: "{hsm_base_url}/hsm/v2/Inventory/ServiceEndpoints"
      method: GET
      verify: !bool "{verify}"
      headers:
        Authorization: "Bearer {access_token}"
    response:
      status_code: 200
      json:
        ServiceEndpoints: !anything
      save:
        json:
          ID: ServiceEndpoints[0].RedfishEndpointID

---
test_name: Query the ServiceEndpoints collection for the AccountService

stages:
  - name: Get access token
    request:
      url: "{opaal_base_url}/token"
      method: GET
      verify: !bool "{verify}"
    response:
      status_code: 200
      save:
        json:
          access_token: access_token
  # GET /ServiceEndpoints/AccountService API response code
  # GET /ServiceEndpoints/AccountService API response body
  - name: Ensure that we can conduct a query on the ServiceEndpoints collection for the AccountService
    request:
      url: "{hsm_base_url}/hsm/v2/Inventory/ServiceEndpoints/AccountService"
      method: GET
      verify: !bool "{verify}"
      headers:
        Authorization: "Bearer {access_token}"
    response:
      status_code: 200
      save:
        json:
          id: ServiceEndpoints[0].RedfishEndpointID

  # GET /ServiceEndpoints?service=AccountService API response code
  - name: Ensure that we can conduct a query on the ServiceEndpoints collection for the AccountService using the service query parameter
    request:
      url: "{hsm_base_url}/hsm/v2/Inventory/ServiceEndpoints?service=AccountService"
      method: GET
      verify: !bool "{verify}"
      headers:
        Authorization: "Bearer {access_token}"
    response:
      status_code: 200

  # GET /ServiceEndpoints/AccountService/RedfishEndpoints/{xname} nodeBMC API response code
  - name: Ensure that we can conduct a query for a specific xname in the ServiceEndpoints collection for the AccountService
    request:
      url: "{hsm_base_url}/hsm/v2/Inventory/ServiceEndpoints/AccountService/RedfishEndpoints/{id}"
      method: GET
      verify: !bool "{verify}"
      headers:
        Authorization: "Bearer {access_token}"
    response:
      status_code: 200

---
test_name: Query the ServiceEndpoints collection for the EventService

stages:
  - name: Get access token
    request:
      url: "{opaal_base_url}/token"
      method: GET
      verify: !bool "{verify}"
    response:
      status_code: 200
      save:
        json:
          access_token: access_token
  # GET /ServiceEndpoints/EventService API response code
  # GET /ServiceEndpoints/EventService API response body
  - name: Ensure that we can conduct a query on the ServiceEndpoints collection for the EventService
    request:
      url: "{hsm_base_url}/hsm/v2/Inventory/ServiceEndpoints/EventService"
      method: GET
      verify: !bool "{verify}"
      headers:
        Authorization: "Bearer {access_token}"
    response:
      status_code: 200
      save:
        json:
          id: ServiceEndpoints[0].RedfishEndpointID

  # GET /ServiceEndpoints?service=EventService API response code
  - name: Ensure that we can conduct a query on the ServiceEndpoints collection for the EventService using the service query parameter
    request:
      url: "{hsm_base_url}/hsm/v2/Inventory/ServiceEndpoints?service=EventService"
      method: GET
      verify: !bool "{verify}"
      headers:
        Authorization: "Bearer {access_token}"
    response:
      status_code: 200

  # GET /ServiceEndpoints/EventService/RedfishEndpoints/{xname} nodeBMC API response code
  - name: Ensure that we can conduct a query for a specific xname in the ServiceEndpoints collection for the EventService
    request:
      url: "{hsm_base_url}/hsm/v2/Inventory/ServiceEndpoints/EventService/RedfishEndpoints/{id}"
      method: GET
      verify: !bool "{verify}"
      headers:
        Authorization: "Bearer {access_token}"
    response:
      status_code: 200

---
test_name: Query the ServiceEndpoints collection for the SessionService

stages:
  - name: Get access token
    request:
      url: "{opaal_base_url}/token"
      method: GET
      verify: !bool "{verify}"
    response:
      status_code: 200
      save:
        json:
          access_token: access_token
  # GET /ServiceEndpoints/SessionService API response code
  # GET /ServiceEndpoints/SessionService API response body
  - name: Ensure that we can conduct a query on the ServiceEndpoints collection for the SessionService
    request:
      url: "{hsm_base_url}/hsm/v2/Inventory/ServiceEndpoints/SessionService"
      method: GET
      verify: !bool "{verify}"
      headers:
        Authorization: "Bearer {access_token}"
    response:
      status_code: 200
      save:
        json:
          id: ServiceEndpoints[0].RedfishEndpointID

  # GET /ServiceEndpoints?service=SessionService API response code
  - name: Ensure that we can conduct a query on the ServiceEndpoints collection for the SessionService using the service query parameter
    request:
      url: "{hsm_base_url}/hsm/v2/Inventory/ServiceEndpoints?service=SessionService"
      method: GET
      verify: !bool "{verify}"
      headers:
        Authorization: "Bearer {access_token}"
    response:
      status_code: 200

  # GET /ServiceEndpoints/SessionService/RedfishEndpoints/{xname} nodeBMC API response code
  - name: Ensure that we can conduct a query for a specific xname in the ServiceEndpoints collection for the SessionService
    request:
      url: "{hsm_base_url}/hsm/v2/Inventory/ServiceEndpoints/SessionService/RedfishEndpoints/{id}"
      method: GET
      verify: !bool "{verify}"
      headers:
        Authorization: "Bearer {access_token}"
    response:
      status_code: 200

---
test_name: Query the ServiceEndpoints collection for the UpdateService

stages:
  - name: Get access token
    request:
      url: "{opaal_base_url}/token"
      method: GET
      verify: !bool "{verify}"
    response:
      status_code: 200
      save:
        json:
          access_token: access_token
  # GET /ServiceEndpoints/UpdateService API response code
  # GET /ServiceEndpoints/UpdateService API response body
  - name: Ensure that we can conduct a query on the ServiceEndpoints collection for the UpdateService
    request:
      url: "{hsm_base_url}/hsm/v2/Inventory/ServiceEndpoints/UpdateService"
      method: GET
      verify: !bool "{verify}"
      headers:
        Authorization: "Bearer {access_token}"
    response:
      status_code: 200
      save:
        json:
          id: ServiceEndpoints[0].RedfishEndpointID

  # GET /ServiceEndpoints?service=UpdateService API response code
  - name: Ensure that we can conduct a query on the ServiceEndpoints collection for the UpdateService using the service query parameter
    request:
      url: "{hsm_base_url}/hsm/v2/Inventory/ServiceEndpoints?service=UpdateService"
      method: GET
      verify: !bool "{verify}"
      headers:
        Authorization: "Bearer {access_token}"
    response:
      status_code: 200

  # GET /ServiceEndpoints/UpdateService/RedfishEndpoints/{xname} nodeBMC API response code
  - name: Ensure that we can conduct a query for a specific xname in the ServiceEndpoints collection for the UpdateService
    request:
      url: "{hsm_base_url}/hsm/v2/Inventory/ServiceEndpoints/UpdateService/RedfishEndpoints/{id}"
      method: GET
      verify: !bool "{verify}"
      headers:
        Authorization: "Bearer {access_token}"
    response:
      status_code: 200

---
test_name: Attempt to query the ServiceEndpoints collection for the AccountService with a valid but nonexistent xname

stages:
  - name: Get access token
    request:
      url: "{opaal_base_url}/token"
      method: GET
      verify: !bool "{verify}"
    response:
      status_code: 200
      save:
        json:
          access_token: access_token
  # GET /ServiceEndpoints/AccountService/RedfishEndpoints/{xname} valid nonexistent nodeBMC API response code
  - name: Verify failure when providing a valid but nonexistent xname for the AccountService in the ServiceEndpoints collection
    request:
      url: "{hsm_base_url}/hsm/v2/Inventory/ServiceEndpoints/AccountService/RedfishEndpoints/x1025c7s4b4"
      method: GET
      verify: !bool "{verify}"
      headers:
        Authorization: "Bearer {access_token}"
    response:
      status_code: 404

---
test_name: Attempt to query the ServiceEndpoints collection for the EventService with a valid but nonexistent xname

stages:
  - name: Get access token
    request:
      url: "{opaal_base_url}/token"
      method: GET
      verify: !bool "{verify}"
    response:
      status_code: 200
      save:
        json:
          access_token: access_token
  # GET /ServiceEndpoints/EventService/RedfishEndpoints/{xname} valid nonexistent nodeBMC API response code
  - name: Verify failure when providing a valid but nonexistent xname for the EventService in the ServiceEndpoints collection
    request:
      url: "{hsm_base_url}/hsm/v2/Inventory/ServiceEndpoints/EventService/RedfishEndpoints/x1025c7s4b4"
      method: GET
      verify: !bool "{verify}"
      headers:
        Authorization: "Bearer {access_token}"
    response:
      status_code: 404

---
test_name: Attempt to query the ServiceEndpoints collection for the SessionService with a valid but nonexistent xname

stages:
  - name: Get access token
    request:
      url: "{opaal_base_url}/token"
      method: GET
      verify: !bool "{verify}"
    response:
      status_code: 200
      save:
        json:
          access_token: access_token
  # GET /ServiceEndpoints/SessionService/RedfishEndpoints/{xname} valid nonexistent nodeBMC API response code
  - name: Verify failure when providing a valid but nonexistent xname for the SessionService in the ServiceEndpoints collection
    request:
      url: "{hsm_base_url}/hsm/v2/Inventory/ServiceEndpoints/SessionService/RedfishEndpoints/x1025c7s4b4"
      method: GET
      verify: !bool "{verify}"
      headers:
        Authorization: "Bearer {access_token}"
    response:
      status_code: 404

---
test_name: Attempt to query the ServiceEndpoints collection for the UpdateService with a valid but nonexistent xname

stages:
  - name: Get access token
    request:
      url: "{opaal_base_url}/token"
      method: GET
      verify: !bool "{verify}"
    response:
      status_code: 200
      save:
        json:
          access_token: access_token
  # GET /ServiceEndpoints/UpdateService/RedfishEndpoints/{xname} valid nonexistent nodeBMC API response code
  - name: Verify failure when providing a valid but nonexistent xname for the UpdateService in the ServiceEndpoints collection
    request:
      url: "{hsm_base_url}/hsm/v2/Inventory/ServiceEndpoints/UpdateService/RedfishEndpoints/x1025c7s4b4"
      method: GET
      verify: !bool "{verify}"
      headers:
        Authorization: "Bearer {access_token}"
    response:
      status_code: 404

---
test_name: Attempt to query the ServiceEndpoints collection for the AccountService with an invalid xname

stages:
  - name: Get access token
    request:
      url: "{opaal_base_url}/token"
      method: GET
      verify: !bool "{verify}"
    response:
      status_code: 200
      save:
        json:
          access_token: access_token
  # GET /ServiceEndpoints/AccountService/RedfishEndpoints/{xname} invalid nodeBMC API response code
  - name: Verify failure when providing an invalid xname for the AccountService in the ServiceEndpoints collection
    request:
      url: "{hsm_base_url}/hsm/v2/Inventory/ServiceEndpoints/AccountService/RedfishEndpoints/x1025000c7s4b4"
      method: GET
      verify: !bool "{verify}"
      headers:
        Authorization: "Bearer {access_token}"
    response:
      status_code: 400

---
test_name: Attempt to query the ServiceEndpoints collection for the EventService with an invalid xname

stages:
  - name: Get access token
    request:
      url: "{opaal_base_url}/token"
      method: GET
      verify: !bool "{verify}"
    response:
      status_code: 200
      save:
        json:
          access_token: access_token
  # GET /ServiceEndpoints/EventService/RedfishEndpoints/{xname} invalid nodeBMC API response code
  - name: Verify failure when providing an invalid xname for the EventService in the ServiceEndpoints collection
    request:
      url: "{hsm_base_url}/hsm/v2/Inventory/ServiceEndpoints/EventService/RedfishEndpoints/x1025000c7s4b4"
      method: GET
      verify: !bool "{verify}"
      headers:
        Authorization: "Bearer {access_token}"
    response:
      status_code: 400

---
test_name: Attempt to query the ServiceEndpoints collection for the SessionService with an invalid xname

stages:
  - name: Get access token
    request:
      url: "{opaal_base_url}/token"
      method: GET
      verify: !bool "{verify}"
    response:
      status_code: 200
      save:
        json:
          access_token: access_token
  # GET /ServiceEndpoints/SessionService/RedfishEndpoints/{xname} invalid nodeBMC API response code
  - name: Verify failure when providing an invalid xname for the SessionService in the ServiceEndpoints collection
    request:
      url: "{hsm_base_url}/hsm/v2/Inventory/ServiceEndpoints/SessionService/RedfishEndpoints/x1025000c7s4b4"
      method: GET
      verify: !bool "{verify}"
      headers:
        Authorization: "Bearer {access_token}"
    response:
      status_code: 400

---
test_name: Attempt to query the ServiceEndpoints collection for the UpdateService with an invalid xname

stages:
  - name: Get access token
    request:
      url: "{opaal_base_url}/token"
      method: GET
      verify: !bool "{verify}"
    response:
      status_code: 200
      save:
        json:
          access_token: access_token
  # GET /ServiceEndpoints/UpdateService/RedfishEndpoints/{xname} invalid nodeBMC API response code
  - name: Verify failure when providing an invalid xname for the UpdateService in the ServiceEndpoints collection
    request:
      url: "{hsm_base_url}/hsm/v2/Inventory/ServiceEndpoints/UpdateService/RedfishEndpoints/x1025000c7s4b4"
      method: GET
      verify: !bool "{verify}"
      headers:
        Authorization: "Bearer {access_token}"
    response:
      status_code: 400
