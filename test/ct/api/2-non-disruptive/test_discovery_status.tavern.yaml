# MIT License
#
# (C) Copyright [2019-2023] Hewlett Packard Enterprise Development LP
#
# Permission is hereby granted, free of charge, to any person obtaining a
# copy of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR
# OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
# ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
# OTHER DEALINGS IN THE SOFTWARE.

# Tavern test cases for the Hardware State Manager (HSM) DiscoveryStatus API.
# Author: Mitch Schooler
# Service: Hardware State Manager

# HMS test metrics test cases: 4
# GET /DiscoveryStatus all
# GET /DiscoveryStatus/{id} present ID
# GET /DiscoveryStatus/{id} non-present ID
# GET /DiscoveryStatus/{id} invalid ID
---
test_name: Ensure that we can gather the system discovery status information

stages:
  - name: Get access token
    request:
      url: "{opaal_base_url}/token"
      method: GET
      verify: !bool "{verify}"
    response:
      status_code: 200
      save:
        json:
          access_token: access_token
  # GET /DiscoveryStatus all
  - name: Ensure that we can conduct a discovery status query
    request:
      url: "{hsm_base_url}/hsm/v2/Inventory/DiscoveryStatus"
      method: GET
      verify: !bool "{verify}"
      headers:
        Authorization: "Bearer {access_token}"
    response:
      status_code: 200
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: seq
            matching: all
            sequence:
              - type: map
                matching: all
                mapping:
                  ID:
                    type: int
                  LastUpdateTime:
                    type: timestamp
                  Status:
                    type: str
                    enum:
                      - "Complete"
                      - "InProgress"
                      - "NotStarted"
                      - "Pending"
                  Details:
                    type: map
                    required: False
                    mapping:
                      description:
                        type: str
                        required: False
      save:
        json:
          id: "[0].ID"

  # GET /DiscoveryStatus/{id} present ID
  - name: Retrieve discovery status data for a single discovery instance
    request:
      url: "{hsm_base_url}/hsm/v2/Inventory/DiscoveryStatus/{id}"
      method: GET
      verify: !bool "{verify}"
      headers:
        Authorization: "Bearer {access_token}"
    response:
      status_code: 200
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            mapping:
              ID:
                type: int
                enum:
                  - !int "{id:d}"
              LastUpdateTime:
                type: timestamp
              Status:
                type: str
                enum:
                  - "Complete"
                  - "InProgress"
                  - "NotStarted"
                  - "Pending"
              Details:
                type: map
                required: False
                mapping:
                  description:
                    type: str
                    required: False

  # GET /DiscoveryStatus/{id} non-present ID
  - name: Attempt to retrieve discovery status data for a non-present discovery instance
    request:
      url: "{hsm_base_url}/hsm/v2/Inventory/DiscoveryStatus/999999999"
      method: GET
      verify: !bool "{verify}"
      headers:
        Authorization: "Bearer {access_token}"
    response:
      status_code: 404
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            mapping:
              type:
                type: str
                enum:
                  - "about:blank"
              title:
                type: str
                enum:
                  - "Not Found"
              detail:
                type: str
                enum:
                  - "no such DiscoveryStatus ID."
              status:
                type: int
                enum:
                  - 404

  # GET /DiscoveryStatus/{id} invalid ID
  - name: Attempt to retrieve discovery status data for an invalid discovery instance
    request:
      url: "{hsm_base_url}/hsm/v2/Inventory/DiscoveryStatus/FAKE"
      method: GET
      verify: !bool "{verify}"
      headers:
        Authorization: "Bearer {access_token}"
    response:
      status_code: 400
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            mapping:
              type:
                type: str
                enum:
                  - "about:blank"
              title:
                type: str
                enum:
                  - "Bad Request"
              detail:
                type: str
                enum:
                  - "DiscoveryStatus ID not an unsigned integer"
              status:
                type: int
                enum:
                  - 400
